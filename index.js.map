{"version":3,"file":"index.js","sources":["../dist/module/props.js","../dist/module/vec4.js","../dist/module/fluid2d.js","../dist/module/fluid2d-gpu.js","../dist/module/index.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar Property = /** @class */ (function () {\n    function Property(target, name, min, max, multiplier) {\n        if (multiplier === void 0) { multiplier = 1.0; }\n        this.target = target;\n        this.name = name;\n        this.min = min;\n        this.max = max;\n        this.multiplier = multiplier;\n    }\n    return Property;\n}());\nexport { Property };\nexport function range(prop) {\n    var p = document.createElement(\"div\");\n    p.style.marginLeft = \"10px\";\n    var label = document.createElement(\"label\");\n    var input = document.createElement(\"input\");\n    var output = document.createElement(\"output\");\n    label.htmlFor = prop.name;\n    label.innerText = prop.name;\n    if (prop.multiplier !== 1.0) {\n        label.innerText += \" (* \" + prop.multiplier.toExponential() + \")\";\n    }\n    p.appendChild(label);\n    label.style.display = \"inline-block\";\n    label.style.width = \"200px\";\n    p.appendChild(input);\n    input.style.display = \"inline-block\";\n    input.style.verticalAlign = \"middle\";\n    output.style.display = \"inline-block\";\n    output.style.verticalAlign = \"middle\";\n    p.appendChild(output);\n    input.id = prop.name;\n    input.type = \"range\";\n    if (prop.min) {\n        input.min = (prop.min / prop.multiplier).toString();\n    }\n    if (prop.max) {\n        input.max = (prop.max / prop.multiplier).toString();\n    }\n    input.value = (prop.target[prop.name] / prop.multiplier).toString();\n    output.innerText = prop.target[prop.name].toString();\n    input.oninput = function (ev) {\n        var val = input.value;\n        var num = Number.parseFloat(val) * prop.multiplier;\n        output.innerText = num.toString();\n        if (prop.target) {\n            prop.target[prop.name] = num;\n            if ((\"on_\" + prop.name) in prop.target) {\n                prop.target[\"on_\" + prop.name]();\n            }\n        }\n    };\n    return p;\n}\nexport function combo(target, name, options) {\n    var p = document.createElement(\"div\");\n    p.style.marginLeft = \"10px\";\n    var label = document.createElement(\"label\");\n    label.innerText = name;\n    var select = document.createElement(\"select\");\n    for (var i = 0; i < options.length; ++i) {\n        var option = document.createElement(\"option\");\n        option.value = i.toString();\n        option.innerText = options[i];\n        select.appendChild(option);\n    }\n    select.value = target[name].toString();\n    select.onchange = function (ev) {\n        var i = Number.parseInt(select.value);\n        target[name] = Number.isNaN(i) ? 0 : i;\n    };\n    label.appendChild(select);\n    p.appendChild(label);\n    return p;\n}\nexport function group(label) {\n    var e_1, _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var div = document.createElement(\"div\");\n    div.innerText = label;\n    div.style.marginLeft = \"10px\";\n    try {\n        for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n            var el = args_1_1.value;\n            if (el instanceof HTMLElement) {\n                div.appendChild(el);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return div;\n}\n//# sourceMappingURL=props.js.map","export function saturatef(x) {\n    return x >= 0.0 ? (x <= 1.0 ? x : 1.0) : 0.0;\n}\nexport function hue(vec, h) {\n    vec.x = saturatef(Math.abs(h * 6.0 - 3.0) - 1.0);\n    vec.y = saturatef(2.0 - Math.abs(h * 6.0 - 2.0));\n    vec.z = saturatef(2.0 - Math.abs(h * 6.0 - 4.0));\n}\nvar Vec4 = /** @class */ (function () {\n    function Vec4(x, y, z, w) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    return Vec4;\n}());\nexport { Vec4 };\n//# sourceMappingURL=vec4.js.map","function clamp(v, min, max) {\n    return v <= max ? (v >= min ? v : min) : max;\n}\nexport var w = 128;\nexport var h = 128;\nvar Fluid2d = /** @class */ (function () {\n    function Fluid2d() {\n        this.vorticity = 10.0;\n        this.viscosity = 0.000001;\n        this.diffusionDensity = 0.000001;\n        this.diffusionColor = 0.0;\n        this.dampDensity = 0.1;\n        this.dampVelocity = 0.0;\n        this.gravityX = 0;\n        this.gravityY = 900;\n        this.cVelocityX = 0;\n        this.cVelocityY = 0.1;\n        this.density = new Float32Array(w * h);\n        this.u = new Float32Array(w * h);\n        this.v = new Float32Array(w * h);\n        this.density0 = new Float32Array(w * h);\n        this.u0 = new Float32Array(w * h);\n        this.v0 = new Float32Array(w * h);\n        this.scratch = new Float32Array(w * h);\n        this.blocked = new Uint8Array(w * h);\n        this.cu = new Float32Array(w * h);\n        this.cv = new Float32Array(w * h);\n        this.r = new Float32Array(w * h);\n        this.g = new Float32Array(w * h);\n        this.b = new Float32Array(w * h);\n        this.r0 = new Float32Array(w * h);\n        this.g0 = new Float32Array(w * h);\n        this.b0 = new Float32Array(w * h);\n        this.advectType = 2;\n        var dXSize = 1.0;\n        var dYSize = 1.0;\n        for (var j = 0; j < h; ++j) {\n            for (var i = 0; i < w; ++i) {\n                var ij = i + j * w;\n                this.cu[ij] = i * dXSize;\n                this.cv[ij] = j * dYSize;\n            }\n        }\n    }\n    Fluid2d.prototype.clearPrevious = function () {\n        this.density0.fill(0.0);\n        this.u0.fill(0.0);\n        this.v0.fill(0.0);\n    };\n    Fluid2d.prototype.clearCurrent = function () {\n        this.density.fill(0.0);\n        this.u.fill(0.0);\n        this.v.fill(0.0);\n    };\n    Fluid2d.prototype.addSourceDensity = function (amount, x, y) {\n        var ij = y * w + x;\n        if (this.blocked[ij] === 0) {\n            this.density0[ij] += amount;\n        }\n    };\n    Fluid2d.prototype.addSourceVelocity = function (force, dx, dy, x, y) {\n        var ij = y * w + x;\n        if (this.blocked[ij] === 0) {\n            this.u0[ij] += force * dx;\n            this.v0[ij] += force * dy;\n        }\n    };\n    Fluid2d.prototype.addSource = function (dst, src, dt) {\n        for (var i = 0; i < dst.length; ++i) {\n            dst[i] += src[i] * dt;\n        }\n    };\n    Fluid2d.prototype.get = function (arr, x, y) {\n        //if (x >= w || y < 0 || y >= h || x < 0) throw new Error(\"out of bounds\");\n        return arr[y * w + x];\n    };\n    Fluid2d.prototype.set = function (arr, x, y, v) {\n        //if (x >= w || y < 0 || y >= h || x < 0) throw new Error(\"out of bounds\");\n        arr[y * w + x] = v;\n    };\n    Fluid2d.prototype.add = function (arr, x, y, v) {\n        //if (x >= w || y < 0 || y >= h || x < 0) throw new Error(\"out of bounds\");\n        arr[y * w + x] += v;\n    };\n    Fluid2d.prototype.setBounds2 = function (source, axis) {\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = j * w + i;\n                if (this.blocked[ij] === 0) {\n                    continue;\n                }\n                var count = 0;\n                var total = 0.0;\n                if (axis === 1) {\n                    if (this.blocked[ij - 1]) {\n                        ++count;\n                        total -= source[ij - 1];\n                    }\n                    if (this.blocked[ij + 1]) {\n                        ++count;\n                        total -= source[ij + 1];\n                    }\n                }\n                else if (axis === 2) {\n                    if (this.blocked[ij - w]) {\n                        ++count;\n                        total -= source[ij - w];\n                    }\n                    if (this.blocked[ij + w]) {\n                        ++count;\n                        total -= source[ij + w];\n                    }\n                }\n                else {\n                    if (this.blocked[ij - w]) {\n                        ++count;\n                        total += source[ij - w];\n                    }\n                    if (this.blocked[ij - 1]) {\n                        ++count;\n                        total += source[ij - 1];\n                    }\n                    if (this.blocked[ij + 1]) {\n                        ++count;\n                        total += source[ij + 1];\n                    }\n                    if (this.blocked[ij + w]) {\n                        ++count;\n                        total += source[ij + w];\n                    }\n                }\n                if (count !== 0) {\n                    total /= count;\n                }\n                source[ij] = total;\n            }\n        }\n        var sizeX = w - 1;\n        var sizeY = h - 1;\n        var fx = axis === 1 ? -1.0 : 1.0;\n        // const fx = b === 0 ? 0.0 : (b === 1 ? -1.0 : 1.0);\n        for (var i = 1; i < sizeY; ++i) {\n            this.set(source, 0, i, fx * this.get(source, 1, i));\n            this.set(source, sizeX, i, fx * this.get(source, sizeX - 1, i));\n        }\n        var fy = axis === 2 ? -1.0 : 1.0;\n        // const fy = b === 0 ? 0.0 : (b === 2 ? -1.0 : 1.0);\n        for (var i = 1; i < sizeX; ++i) {\n            source[i] = fy * source[w + i];\n            this.set(source, i, sizeY, fy * this.get(source, i, sizeY - 1));\n        }\n        source[0] = 0.5 * (source[1] + source[w]);\n        this.set(source, 0, sizeY, 0.5 * (this.get(source, 1, sizeY) + this.get(source, 0, sizeY - 1)));\n        source[sizeX] = 0.5 * (source[sizeX - 1] + source[w + sizeX]);\n        this.set(source, sizeX, sizeY, 0.5 * (this.get(source, sizeX - 1, sizeY) + this.get(source, sizeX, sizeY - 1)));\n    };\n    Fluid2d.prototype.setBounds = function (source, axis) {\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = j * w + i;\n                if (this.blocked[ij]) {\n                    source[ij] = 0.0;\n                }\n                if (axis === 1) {\n                    if (this.blocked[ij - 1] && source[ij] < 0) {\n                        source[ij] = -source[ij];\n                    }\n                    if (this.blocked[ij + 1] && source[ij] > 0) {\n                        source[ij] = -source[ij];\n                    }\n                }\n                else if (axis === 2) {\n                    if (this.blocked[ij + w] && source[ij] > 0) {\n                        source[ij] = -source[ij];\n                    }\n                    if (this.blocked[ij - w] && source[ij] < 0) {\n                        source[ij] = -source[ij];\n                    }\n                }\n                else {\n                    // if (this.blocked[(j + 1) * w + i]) {\n                    //     ++count;\n                    //     total += source[(j + 1) * w + i];\n                    // }\n                    // if (this.blocked[(j - 1) * w + i]) {\n                    //     ++count;\n                    //     total += source[(j - 1) * w + i];\n                    // }\n                    // if (this.blocked[j * w + i - 1]) {\n                    //     ++count;\n                    //     total += source[j * w + i - 1];\n                    // }\n                    // if (this.blocked[j * w + i + 1]) {\n                    //     ++count;\n                    //     total += source[j * w + i + 1];\n                    // }\n                }\n                // if (count !== 0) {\n                //     total /= count;\n                // }\n                // source[j * w + i] = total;\n            }\n        }\n        // const sizeX = w - 1;\n        // const sizeY = h - 1;\n        // const fx = axis === 1 ? -1.0 : 1.0;\n        // // const fx = b === 0 ? 0.0 : (b === 1 ? -1.0 : 1.0);\n        // for (let i = 1; i < sizeY; ++i) {\n        //     this.set(source, 0, i, fx * this.get(source, 1, i));\n        //     this.set(source, sizeX, i, fx * this.get(source, sizeX - 1, i));\n        // }\n        // const fy = axis === 2 ? -1.0 : 1.0;\n        // // const fy = b === 0 ? 0.0 : (b === 2 ? -1.0 : 1.0);\n        // for (let i = 1; i < sizeX; ++i) {\n        //     source[i] = fy * source[w + i];\n        //     this.set(source, i, sizeY, fy * this.get(source, i, sizeY - 1));\n        // }\n        // source[0] = 0.5 * (source[1] + source[w]);\n        // this.set(source, 0, sizeY, 0.5 * (this.get(source, 1, sizeY) + this.get(source, 0, sizeY - 1)));\n        // source[sizeX] = 0.5 * (source[sizeX - 1] + source[w + sizeX]);\n        // this.set(source, sizeX, sizeY, 0.5 * (this.get(source, sizeX - 1, sizeY) + this.get(source, sizeX, sizeY - 1)));\n    };\n    Fluid2d.prototype.solve = function (x, x0, a, c, iterations, axis) {\n        var sizeX = w - 1;\n        var sizeY = h - 1;\n        for (var k = 0; k < iterations; ++k) {\n            for (var j = 1; j < sizeY; ++j) {\n                for (var i = 1; i < sizeX; ++i) {\n                    var ij = j * w + i;\n                    var neighbourSum = x[ij - w] + x[ij - 1] + x[ij + 1] + x[ij + w];\n                    x[ij] = (x0[ij] + a * neighbourSum) / c;\n                }\n            }\n            this.setBounds(x, axis);\n        }\n    };\n    Fluid2d.prototype.diffuse = function (x, x0, diff, dt, iterations, axis) {\n        var sizeX = w - 1;\n        var sizeY = h - 1;\n        // float a = dt * diff * N * N;\n        var a = dt * diff * (sizeX - 1) * (sizeY - 1);\n        // lin_solve(N, b, x, x0, a, 1 + 4 * a);\n        this.solve(x, x0, a, 1.0 + 4.0 * a, iterations, axis);\n    };\n    Fluid2d.prototype.advect = function (current, previous, u, v, dt, b) {\n        var sizeX = w - 1;\n        var sizeY = h - 1;\n        var dx = dt * this.cVelocityX;\n        var dy = dt * this.cVelocityY;\n        for (var j = 1; j < sizeY; ++j) {\n            for (var i = 1; i < sizeX; ++i) {\n                var ij = j * w + i;\n                if (this.blocked[ij] !== 0) {\n                    continue;\n                }\n                var oldX = clamp(i - dx + dt * u[ij], 0.5, sizeX - 0.5);\n                var oldY = clamp(j - dy + dt * v[ij], 0.5, sizeY - 0.5);\n                var fromX = oldX | 0;\n                var fromY = oldY | 0;\n                var iR = oldX - fromX;\n                var iT = oldY - fromY;\n                var ij0 = fromY * w + fromX;\n                var iL = 1.0 - iR;\n                var iB = 1.0 - iT;\n                var m00 = previous[ij0];\n                var m10 = previous[ij0 + 1];\n                var m01 = previous[ij0 + w];\n                var m11 = previous[ij0 + w + 1];\n                current[ij] =\n                    // iB * (iL * m00 + iR * m10) +\n                    // iT * (iL * m01 + iR * m11);\n                    iL * (iB * m00 + iT * m01) +\n                        iR * (iB * m10 + iT * m11);\n                // (1.0 - dtX) * ((1.0 - dtY) * m00 + dtY * m01) +\n                // dtX * ((1.0 - dtY) * m10 + dtY * m11);\n            }\n        }\n        this.setBounds(current, b);\n    };\n    Fluid2d.prototype.horizontalDifference = function (source, x, y) {\n        var i = y * w + x;\n        return -source[i - w] + source[i + w];\n    };\n    Fluid2d.prototype.verticalDifference = function (source, x, y) {\n        var i = y * w + x;\n        return -source[i - 1] + source[i + 1];\n    };\n    Fluid2d.prototype.project = function (u, v, p, div, iterations) {\n        var sizeX = w - 1;\n        var sizeY = h - 1;\n        var unitSizeX = sizeX - 1.0;\n        var unitSizeY = sizeY - 1.0;\n        var unitSize = Math.sqrt(unitSizeX * unitSizeX + unitSizeY * unitSizeY);\n        var unit = 1.0 / unitSize;\n        var unitX = 1.0 / unitSizeX;\n        var unitY = 1.0 / unitSizeY;\n        for (var j = 1; j < sizeY; ++j) {\n            for (var i = 1; i < sizeX; ++i) {\n                var ij = j * w + i;\n                div[ij] = -0.5 * (unit * this.verticalDifference(u, i, j) + unit * this.horizontalDifference(v, i, j));\n                p[ij] = 0.0;\n            }\n        }\n        this.setBounds(div, 0);\n        this.setBounds(p, 0);\n        //lin_solve ( N, 0, p, div, 1, 4 );\n        this.solve(p, div, 1.0, 4.0, iterations, 0);\n        for (var j = 1; j < sizeY; ++j) {\n            for (var i = 1; i < sizeX; ++i) {\n                var ij = j * w + i;\n                u[ij] -= 0.5 * unitSize * this.verticalDifference(p, i, j);\n                v[ij] -= 0.5 * unitSize * this.horizontalDifference(p, i, j);\n            }\n        }\n        this.setBounds(u, 1);\n        this.setBounds(v, 2);\n    };\n    Fluid2d.prototype.densityStep = function (dt) {\n        // add_source ( N, x, x0, dt );\n        // SWAP ( x0, x ); diffuse ( N, 0, x, x0, diff, dt );\n        // SWAP ( x0, x ); advect ( N, 0, x, x0, u, v, dt );\n        this.addSource(this.density, this.density0, dt);\n        // this.r.set(this.r0);\n        // this.g.set(this.g0);\n        // this.b.set(this.b0);\n        // this.diffuse(this.r, this.r0, diffusion, dt, 20, 0);\n        // this.diffuse(this.g, this.g0, diffusion, dt, 20, 0);\n        // this.diffuse(this.b, this.b0, diffusion, dt, 20, 0);\n        if (this.advectType === 0) {\n            this.advect(this.density0, this.density, this.u, this.v, dt, 0);\n            this.advect(this.r, this.r0, this.u, this.v, dt, 0);\n            this.advect(this.g, this.g0, this.u, this.v, dt, 0);\n            this.advect(this.b, this.b0, this.u, this.v, dt, 0);\n        }\n        else if (this.advectType === 1) {\n            this.advectPrepared(this.density0, this.density, this.cu, this.cv, 0);\n            this.advectPrepared(this.r, this.r0, this.cu, this.cv, 0);\n            this.advectPrepared(this.g, this.g0, this.cu, this.cv, 0);\n            this.advectPrepared(this.b, this.b0, this.cu, this.cv, 0);\n        }\n        else if (this.advectType === 2) {\n            this.advectPrepared(this.density0, this.density, this.cu, this.cv, 0);\n            this.advectPrepared(this.r, this.r0, this.cu, this.cv, 0);\n            this.advectPrepared(this.g, this.g0, this.cu, this.cv, 0);\n            this.advectPrepared(this.b, this.b0, this.cu, this.cv, 0);\n        }\n        this.diffuse(this.density, this.density0, this.diffusionDensity, dt, 20, 0);\n        this.diffuse(this.r0, this.r, this.diffusionColor, dt, 20, 0);\n        this.diffuse(this.g0, this.g, this.diffusionColor, dt, 20, 0);\n        this.diffuse(this.b0, this.b, this.diffusionColor, dt, 20, 0);\n    };\n    Fluid2d.prototype.curl = function (u, v, x, y) {\n        // return this.get(u, x, y + 1) - this.get(u, x, y - 1) +\n        //     this.get(v, x - 1, y) - this.get(v, x + 1, y);\n        var ij = y * w + x;\n        var dv_dx = v[ij + 1] - v[ij - 1];\n        var du_dy = u[ij + w] - u[ij - w];\n        return 0.5 * (du_dy - dv_dx);\n    };\n    Fluid2d.prototype.vorticityConfinement = function (u, v, u0, v0) {\n        var vort = this.scratch;\n        vort.fill(0.0);\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                vort[j * w + i] = Math.abs(this.curl(u0, v0, i, j));\n            }\n        }\n        this.setBounds(vort, 0);\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = j * w + i;\n                var dw_dx = 0.5 * (vort[ij + 1] - vort[ij - 1]);\n                var dw_dy = 0.5 * (vort[ij + w] - vort[ij - w]);\n                var ilen = 1.0 / (Math.sqrt(dw_dx * dw_dx + dw_dy * dw_dy) + 0.000001);\n                dw_dx *= ilen;\n                dw_dy *= ilen;\n                var f = this.curl(u0, v0, i, j);\n                u[ij] = -f * dw_dy;\n                v[ij] = f * dw_dx;\n            }\n        }\n        this.setBounds(u, 1);\n        this.setBounds(v, 2);\n    };\n    Fluid2d.prototype.velocityStep = function (dt) {\n        // add_source ( N, u, u0, dt );\n        // add_source ( N, v, v0, dt );\n        // SWAP ( u0, u );\n        // diffuse ( N, 1, u, u0, visc, dt );\n        // SWAP ( v0, v );\n        // diffuse ( N, 2, v, v0, visc, dt );\n        // project ( N, u, v, u0, v0 );\n        // SWAP ( u0, u );\n        // SWAP ( v0, v );\n        // advect ( N, 2, v, v0, u0, v0, dt );\n        // advect ( N, 1, u, u0, u0, v0, dt );\n        // project ( N, u, v, u0, v0 );\n        this.addSource(this.u, this.u0, dt);\n        this.addSource(this.v, this.v0, dt);\n        this.vorticityConfinement(this.u0, this.v0, this.u, this.v);\n        this.addSource(this.u, this.u0, this.vorticity * dt);\n        this.addSource(this.v, this.v0, this.vorticity * dt);\n        this.diffuse(this.u0, this.u, this.viscosity, dt, 20, 1);\n        this.diffuse(this.v0, this.v, this.viscosity, dt, 20, 2);\n        this.project(this.u0, this.v0, this.u, this.v, 20);\n        if (this.advectType === 0) {\n            this.advect(this.u, this.u0, this.u0, this.v0, dt, 1);\n            this.advect(this.v, this.v0, this.u0, this.v0, dt, 2);\n        }\n        else if (this.advectType === 1) {\n            this.prepareMM(this.u0, this.v0, dt);\n            this.advectPrepared(this.u, this.u0, this.cu, this.cv, 1);\n            this.advectPrepared(this.v, this.v0, this.cu, this.cv, 2);\n        }\n        else if (this.advectType === 2) {\n            this.prepareBFECC(this.u0, this.v0, dt);\n            this.advectPrepared(this.u, this.u0, this.cu, this.cv, 1);\n            this.advectPrepared(this.v, this.v0, this.cu, this.cv, 2);\n        }\n        this.project(this.u, this.v, this.u0, this.v0, 20);\n        var dvf = Math.exp(-this.dampVelocity * dt);\n        for (var ij = 0; ij < this.u.length; ++ij) {\n            this.u[ij] *= dvf;\n            this.v[ij] *= dvf;\n        }\n    };\n    Fluid2d.prototype.interpVelocity = function (x, y, u, v, out) {\n        if (x < 0.5) {\n            x = 0.5;\n        }\n        if (x > (w - 2 + 0.5)) {\n            x = (h - 2 + 0.5);\n        }\n        var i_prev = x | 0;\n        var i_next = i_prev + 1;\n        if (y < 0.5) {\n            y = 0.5;\n        }\n        if (y > (h - 2 + 0.5)) {\n            y = (h - 2 + 0.5);\n        }\n        var j_prev = y | 0;\n        var j_next = j_prev + 1;\n        // Bi-linear interpolation\n        // Finding position inside the grid rescaled from 0-1\n        var s1 = x - i_prev;\n        var s0 = 1.0 - s1;\n        var t1 = y - j_prev;\n        var t0 = 1.0 - t1;\n        var i0j0 = i_prev + (j_prev * w);\n        var i0j1 = i_prev + (j_next * w);\n        var i1j0 = i_next + (j_prev * w);\n        var i1j1 = i_next + (j_next * w);\n        // Velocity X\n        out[0] = s0 * (t0 * u[i0j0] + t1 * u[i0j1]) + s1 * (t0 * u[i1j0] + t1 * u[i1j1]);\n        // Velocity Y\n        out[1] = s0 * (t0 * v[i0j0] + t1 * v[i0j1]) + s1 * (t0 * v[i1j0] + t1 * v[i1j1]);\n    };\n    Fluid2d.prototype.prepareBFECC = function (u, v, dt) {\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = i + j * w;\n                var x = i; //this.characteristicsX[ij];\n                var y = j; //this.cv[ij];\n                var x_forward = x - u[ij] * dt;\n                var y_forward = y - v[ij] * dt;\n                this.interpVelocity(x_forward, y_forward, u, v, this.scratch);\n                var velx_forward = this.scratch[0];\n                var vely_forward = this.scratch[1];\n                var x_backward = x_forward + velx_forward * dt;\n                var y_backward = y_forward + vely_forward * dt;\n                var error_x = 0.5 * (x - x_backward);\n                var error_y = 0.5 * (y - y_backward);\n                var x_bfe = x + error_x;\n                var y_bfe = y + error_y;\n                this.interpVelocity(x_bfe, y_bfe, u, v, this.scratch);\n                var velx_bfe = this.scratch[0];\n                var vely_bfe = this.scratch[1];\n                var x_bfecc = x_bfe - velx_bfe * dt;\n                var y_bfecc = y_bfe - vely_bfe * dt;\n                this.cu[ij] = x_bfecc;\n                this.cv[ij] = y_bfecc;\n            }\n        }\n    };\n    Fluid2d.prototype.prepareMM = function (u, v, dt) {\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = i + j * w;\n                var x = i; //this.characteristicsX[ij];\n                var y = j; //this.cv[ij];\n                var x_forward = x - u[ij] * dt;\n                var y_forward = y - v[ij] * dt;\n                this.interpVelocity(x_forward, y_forward, u, v, this.scratch);\n                var velx_forward = this.scratch[0];\n                var vely_forward = this.scratch[1];\n                var x_backward = x_forward + velx_forward * dt;\n                var y_backward = y_forward + vely_forward * dt;\n                var error_x = 0.5 * (x - x_backward);\n                var error_y = 0.5 * (y - y_backward);\n                var x_mm = x_forward + error_x;\n                var y_mm = y_forward + error_y;\n                // if (x_mm < 0.5) {\n                //     x_mm = 0.5;\n                // }\n                // if (x_mm > (w - 2 + 0.5)) {\n                //     x_mm = w - 2 + 0.5;\n                // }\n                // if (y_mm < 0.5) {\n                //     y_mm = 0.5;\n                // }\n                // if (y_mm > (h - 2 + 0.5)) {\n                //     y_mm = h - 2 + 0.5;\n                // }\n                this.cu[ij] = x_mm;\n                this.cv[ij] = y_mm;\n            }\n        }\n    };\n    Fluid2d.prototype.advectPrepared = function (current, previous, dx, dy, axis) {\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = i + j * w;\n                var x = dx[ij];\n                var y = dy[ij];\n                if (x < 0.5) {\n                    x = 0.5;\n                }\n                if (x > (w - 2 + 0.5)) {\n                    x = (w - 2 + 0.5);\n                }\n                var i_prev = x | 0;\n                var i_next = i_prev + 1;\n                if (y < 0.5) {\n                    y = 0.5;\n                }\n                if (y > (h - 2 + 0.5)) {\n                    y = (h - 2 + 0.5);\n                }\n                var j_prev = y | 0;\n                var j_next = j_prev + 1;\n                // Bi-linear interpolation\n                // Finding position inside the grid rescaled from 0-1\n                var s1 = x - i_prev;\n                var s0 = 1.0 - s1;\n                var t1 = y - j_prev;\n                var t0 = 1.0 - t1;\n                var i0j0 = i_prev + (j_prev * w);\n                var i0j1 = i_prev + (j_next * w);\n                var i1j0 = i_next + (j_prev * w);\n                var i1j1 = i_next + (j_next * w);\n                current[ij] = s0 * (t0 * previous[i0j0] + t1 * previous[i0j1]) +\n                    s1 * (t0 * previous[i1j0] + t1 * previous[i1j1]);\n            }\n        }\n        this.setBounds(current, axis);\n    };\n    Fluid2d.prototype.updateForces = function (dt) {\n        var df = Math.exp(-this.dampDensity * dt);\n        for (var j = 1; j < h - 1; ++j) {\n            for (var i = 1; i < w - 1; ++i) {\n                var ij = j * w + i;\n                var p = this.density[ij] * df;\n                this.u0[ij] += this.gravityX * dt * p;\n                this.v0[ij] += this.gravityY * dt * p;\n                this.density[ij] = p;\n            }\n        }\n    };\n    return Fluid2d;\n}());\nexport { Fluid2d };\n//# sourceMappingURL=fluid2d.js.map","import { hue, Vec4 } from \"./vec4\";\nimport { w } from \"./fluid2d\";\nfunction createGLContext(canvas) {\n    var params = {\n        alpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false\n    };\n    var gl = canvas.getContext(\"webgl2\", params);\n    if (gl) {\n        var ext = gl.getExtension('EXT_color_buffer_float');\n        if (ext) {\n            var linearFiltering = gl.getExtension('OES_texture_float_linear');\n            if (!linearFiltering) {\n                console.warn(\"no linear filtering for float render targets\");\n            }\n            return gl;\n        }\n    }\n    return null;\n}\nfunction createShader(gl, type, code) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.warn(gl.getShaderInfoLog(shader));\n    }\n    return shader;\n}\nfunction createProgram(gl, vertexShader, fragmentShader) {\n    var program = gl.createProgram();\n    var vs = createShader(gl, gl.VERTEX_SHADER, vertexShader);\n    var fs = createShader(gl, gl.FRAGMENT_SHADER, fragmentShader);\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        console.warn(gl.getProgramInfoLog(program));\n    }\n    return program;\n}\nfunction getUniforms(gl, program) {\n    var _a;\n    var uniforms = {};\n    var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (var i = 0; i < uniformCount; i++) {\n        var uniformName = (_a = gl.getActiveUniform(program, i)) === null || _a === void 0 ? void 0 : _a.name;\n        if (uniformName) {\n            uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n        }\n    }\n    return uniforms;\n}\nvar baseVertexShaderCode = \"\\nprecision highp float;\\nattribute vec2 aPosition;\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform vec2 texelSize;\\nvoid main () {\\n    vUv = aPosition * 0.5 + 0.5;\\n    vL = vUv - vec2(texelSize.x, 0.0);\\n    vR = vUv + vec2(texelSize.x, 0.0);\\n    vT = vUv + vec2(0.0, texelSize.y);\\n    vB = vUv - vec2(0.0, texelSize.y);\\n    gl_Position = vec4(aPosition, 0.0, 1.0);\\n}\\n\";\nvar splatShaderCode = \"\\nprecision highp float;\\nprecision highp sampler2D;\\nvarying vec2 vUv;\\nuniform sampler2D uTarget;\\nuniform float aspectRatio;\\nuniform vec3 color;\\nuniform vec2 point;\\nuniform float radius;\\nvoid main () {\\n    vec2 p = vUv - point.xy;\\n    p.x *= aspectRatio;\\n    float a = exp(-dot(p, p) / radius);\\n    //vec3 r = a * color.xyz + (1.0 - a) * texture2D(uTarget, vUv).xyz;\\n    vec3 dest = texture2D(uTarget, vUv).xyz;\\n    //vec3 r = a * color.xyz + (1.0 - a) * dest;\\n    vec3 r = a * color.xyz + dest;\\n    gl_FragColor = vec4(r, 1.0);\\n}\\n\";\nvar curlShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uVelocity;\\nvoid main () {\\n    float L = texture2D(uVelocity, vL).y;\\n    float R = texture2D(uVelocity, vR).y;\\n    float T = texture2D(uVelocity, vT).x;\\n    float B = texture2D(uVelocity, vB).x;\\n    float vorticity = R - L - T + B;\\n    gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\\n}\\n\";\nvar vorticityShaderCode = \"\\nprecision highp float;\\nprecision highp sampler2D;\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uCurl;\\nuniform float curl;\\nuniform float dt;\\nvoid main () {\\n    float L = texture2D(uCurl, vL).x;\\n    float R = texture2D(uCurl, vR).x;\\n    float T = texture2D(uCurl, vT).x;\\n    float B = texture2D(uCurl, vB).x;\\n    float C = texture2D(uCurl, vUv).x;\\n    vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\\n    force /= length(force) + 0.0001;\\n    force *= curl * C;\\n    force.y *= -1.0;\\n    vec2 velocity = texture2D(uVelocity, vUv).xy;\\n    velocity += force * dt;\\n    velocity = min(max(velocity, -1000.0), 1000.0);\\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\\n}\\n\";\nvar displayShaderCode = \"\\nprecision highp float;\\nprecision highp sampler2D;\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uTexture;\\nuniform sampler2D uBloom;\\nuniform sampler2D uSunrays;\\nuniform sampler2D uDithering;\\nuniform sampler2D uObstacleC;\\nuniform float uShadingK;\\nuniform vec2 ditherScale;\\nuniform vec2 texelSize;\\nvec3 linearToGamma (vec3 color) {\\n    color = max(color, vec3(0));\\n    return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\\n}\\nvoid main () {\\n    vec3 c = texture2D(uTexture, vUv).rgb;\\n    vec3 lc = texture2D(uTexture, vL).rgb;\\n    vec3 rc = texture2D(uTexture, vR).rgb;\\n    vec3 tc = texture2D(uTexture, vT).rgb;\\n    vec3 bc = texture2D(uTexture, vB).rgb;\\n    float dx = length(rc) - length(lc);\\n    float dy = length(tc) - length(bc);\\n    vec3 n = normalize(vec3(dx, dy, length(texelSize)));\\n    vec3 l = vec3(0.0, 0.0, 1.0);\\n    float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\\n    c *= mix(1.0, diffuse, uShadingK);\\n    //c = mix(c, vec3(diffuse, diffuse, diffuse), uShadingK);\\n\\n#ifdef BLOOM\\n    vec3 bloom = texture2D(uBloom, vUv).rgb;\\n#endif\\n#ifdef SUNRAYS\\n    float sunrays = texture2D(uSunrays, vUv).r;\\n    c *= sunrays;\\n#ifdef BLOOM\\n    bloom *= sunrays;\\n#endif\\n#endif\\n#ifdef BLOOM\\n    float noise = texture2D(uDithering, vUv * ditherScale).r;\\n    noise = noise * 2.0 - 1.0;\\n    bloom += noise / 255.0;\\n    bloom = linearToGamma(bloom);\\n    c += bloom;\\n#endif\\n    float noise = texture2D(uDithering, vUv * ditherScale).r;\\n    noise = noise * 2.0 - 1.0;\\n    c += noise / 255.0;\\n    float a = max(c.r, max(c.g, c.b));\\n    float C = texture2D(uObstacleC, vUv).x;\\n    gl_FragColor = vec4(c, a) + vec4(C, C, C, 0.0);\\n}\\n\";\nvar clearShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nuniform sampler2D uTexture;\\nuniform float value;\\nvoid main () {\\n    gl_FragColor = value * texture2D(uTexture, vUv);\\n}\\n\";\nvar divergenceShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uObstacleC;\\nuniform sampler2D uObstacleN;\\nvoid main () {\\n    if(texture2D(uObstacleC, vUv).x >= 1.0) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n    float L = texture2D(uVelocity, vL).x;\\n    float R = texture2D(uVelocity, vR).x;\\n    float T = texture2D(uVelocity, vT).y;\\n    float B = texture2D(uVelocity, vB).y;\\n    vec2 C = texture2D(uVelocity, vUv).xy;\\n    if (vL.x < 0.0) { L = -C.x; }\\n    if (vR.x > 1.0) { R = -C.x; }\\n    if (vT.y > 1.0) { T = -C.y; }\\n    if (vB.y < 0.0) { B = -C.y; }\\n    vec4 oN = texture2D(uObstacleN, vUv);\\n    L = mix(L, -C.x, oN.x);  // if(oT > 0.0) vT = -vC;\\n    R = mix(R, -C.x, oN.y);  // if(oB > 0.0) vB = -vC;\\n    T = mix(T, -C.y, oN.z);  // if(oR > 0.0) vR = -vC;\\n    B = mix(B, -C.y, oN.w);  // if(oL > 0.0) vL = -vC;\\n    float div = -0.5 * (R - L + T - B);\\n    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\\n}\\n\";\nvar pressureShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uDivergence;\\nuniform sampler2D uObstacleC;\\nuniform sampler2D uObstacleN;\\nvoid main () {\\n    if(texture2D(uObstacleC, vUv).x >= 1.0) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n    float L = texture2D(uPressure, vL).x;\\n    float R = texture2D(uPressure, vR).x;\\n    float T = texture2D(uPressure, vT).x;\\n    float B = texture2D(uPressure, vB).x;\\n    float C = texture2D(uPressure, vUv).x;\\n    vec4 oN = texture2D(uObstacleN, vUv);\\n    L = mix(L, C, oN.x);  // if(oT > 0.0) vT = -vC;\\n    R = mix(R, C, oN.y);  // if(oB > 0.0) vB = -vC;\\n    T = mix(T, C, oN.z);  // if(oR > 0.0) vR = -vC;\\n    B = mix(B, C, oN.w);  // if(oL > 0.0) vL = -vC;\\n    float div = texture2D(uDivergence, vUv).x;\\n    float pressure = (L + R + B + T + div) * 0.25;\\n    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\\n}\\n\";\nvar gradientSubtractShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uObstacleC;\\nuniform sampler2D uObstacleN;\\n\\nvoid main () {\\n    if(texture2D(uObstacleC, vUv).x >= 1.0) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n    float L = texture2D(uPressure, vL).x;\\n    float R = texture2D(uPressure, vR).x;\\n    float T = texture2D(uPressure, vT).x;\\n    float B = texture2D(uPressure, vB).x;\\n    float C = texture2D(uPressure, vUv).x;\\n    vec2 velocity = texture2D(uVelocity, vUv).xy;\\n    vec4 oN = texture2D(uObstacleN, vUv);\\n    L = mix(L, C, oN.x);  // if(oT > 0.0) vT = -vC;\\n    R = mix(R, C, oN.y);  // if(oB > 0.0) vB = -vC;\\n    T = mix(T, C, oN.z);  // if(oR > 0.0) vR = -vC;\\n    B = mix(B, C, oN.w);  // if(oL > 0.0) vL = -vC;\\n    velocity.xy -= 0.5 * vec2(R - L, T - B);\\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\\n}\\n\";\nvar solveShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform highp vec2 uC;\\nuniform sampler2D uSource;\\nuniform sampler2D uObstacleC;\\nuniform sampler2D uObstacleN;\\nvoid main () {\\n    if(texture2D(uObstacleC, vUv).x >= 1.0) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n    vec4 x0 = texture2D(uSource, vUv);\\n    vec4 L = texture2D(uSource, vL);\\n    vec4 R = texture2D(uSource, vR);\\n    vec4 T = texture2D(uSource, vT);\\n    vec4 B = texture2D(uSource, vB);\\n    vec4 oN = texture2D(uObstacleN, vUv);\\n    L = mix(L, x0, oN.x);  // if(oT > 0.0) vT = -vC;\\n    R = mix(R, x0, oN.y);  // if(oB > 0.0) vB = -vC;\\n    T = mix(T, x0, oN.z);  // if(oR > 0.0) vR = -vC;\\n    B = mix(B, x0, oN.w);  // if(oL > 0.0) vL = -vC;\\n    \\n    vec4 x = (x0 + uC.x * (L + R + B + T)) * uC.y;\\n    gl_FragColor = vec4(x.xyz, 1.0);\\n}\\n\";\nvar advectionShaderCode = \"\\nprecision highp float;\\nprecision highp sampler2D;\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform sampler2D uObstacleC;\\nuniform vec2 texelSize;\\nuniform vec2 dyeTexelSize;\\nuniform float dt;\\nuniform float dissipation;\\nvec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\\n    vec2 st = uv / tsize - 0.5;\\n    vec2 iuv = floor(st);\\n    vec2 fuv = fract(st);\\n    vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\\n    vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\\n    vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\\n    vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\\n    return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\\n}\\nvoid main () {\\n    if(texture2D(uObstacleC, vUv).x > 0.5) {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        return;\\n    }\\n#ifdef MANUAL_FILTERING\\n    vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\\n    vec4 result = bilerp(uSource, coord, dyeTexelSize);\\n#else\\n    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\\n    vec4 result = texture2D(uSource, coord);\\n#endif\\n    float decay = 1.0 + dissipation * dt;\\n    gl_FragColor = result / decay;\\n}\\n\";\nvar obstaclesShaderCode = \"\\nprecision mediump float;\\nprecision mediump sampler2D;\\nvarying highp vec2 vUv;\\nvarying highp vec2 vL;\\nvarying highp vec2 vR;\\nvarying highp vec2 vT;\\nvarying highp vec2 vB;\\nuniform highp vec2 uC;\\nuniform sampler2D uObstacles;\\nvoid main () {\\n    gl_FragColor = vec4(\\n        texture2D(uObstacles, vL).x,\\n        texture2D(uObstacles, vR).x,\\n        texture2D(uObstacles, vT).x,\\n        texture2D(uObstacles, vB).x\\n    );\\n}\\n\";\nvar Program = /** @class */ (function () {\n    function Program(gl, vertexShader, fragmentShader) {\n        this.gl = gl;\n        this.program = createProgram(gl, vertexShader, fragmentShader);\n        this.uniforms = getUniforms(gl, this.program);\n    }\n    Program.prototype.bind = function () {\n        this.gl.useProgram(this.program);\n    };\n    return Program;\n}());\nvar Fbo = /** @class */ (function () {\n    function Fbo(gl, width, height, internalFormat, format, type, param) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        gl.activeTexture(gl.TEXTURE0);\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        var err = gl.getError();\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, format, type, null);\n        err = gl.getError();\n        if (err !== gl.NO_ERROR) {\n            console.error(gl);\n        }\n        this.fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n        gl.viewport(0, 0, width, height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this.texelSizeX = 1.0 / width;\n        this.texelSizeY = 1.0 / height;\n    }\n    Fbo.prototype.attach = function (id) {\n        var gl = this.gl;\n        gl.activeTexture(gl.TEXTURE0 + id);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        return id;\n    };\n    return Fbo;\n}());\nvar DoubleFbo = /** @class */ (function () {\n    function DoubleFbo(gl, width, height, internalFormat, format, type, param) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.fbo1 = new Fbo(gl, width, height, internalFormat, format, type, param);\n        this.fbo2 = new Fbo(gl, width, height, internalFormat, format, type, param);\n        this.texelSizeX = 1.0 / width;\n        this.texelSizeY = 1.0 / height;\n    }\n    Object.defineProperty(DoubleFbo.prototype, \"read\", {\n        get: function () {\n            return this.fbo1;\n        },\n        set: function (value) {\n            this.fbo1 = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DoubleFbo.prototype, \"write\", {\n        get: function () {\n            return this.fbo2;\n        },\n        set: function (value) {\n            this.fbo2 = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DoubleFbo.prototype.swap = function () {\n        var temp = this.fbo1;\n        this.fbo1 = this.fbo2;\n        this.fbo2 = temp;\n    };\n    return DoubleFbo;\n}());\nfunction createTextureDefer(gl, url) {\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255]));\n    var obj = {\n        texture: texture,\n        width: 1,\n        height: 1,\n        attach: function (id) {\n            gl.activeTexture(gl.TEXTURE0 + id);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            return id;\n        }\n    };\n    var image = new Image();\n    image.onload = function () {\n        obj.width = image.width;\n        obj.height = image.height;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n    };\n    image.src = url;\n    return obj;\n}\nvar Fluid2dGpu = /** @class */ (function () {\n    function Fluid2dGpu(id) {\n        var _this = this;\n        this.globalScale = 1.0;\n        this.config = {\n            vorticity: 10.0,\n            pressure: 0.8,\n            pressureIterations: 20,\n            dissipationVelocity: 0.2,\n            dissipationDensity: 1.0,\n            viscosity: 0.0,\n            diffusion: 0.0,\n            shading: 0.0\n        };\n        this.timeScale = 1.0;\n        this.spawnAmount = 50.0 * 6.0 * 10.0;\n        this.spawnForce = 60.0 * w;\n        this.color = new Vec4(1.0, 1.0, 1.0, 1.0);\n        this.colorTime = 0.0;\n        this.colorSpeed = 0.2;\n        this.mousePushed = false;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.startX = 0;\n        this.startY = 0;\n        this.N = 0;\n        var mapWidth = 1024;\n        var mapHeight = 1024;\n        var simulationWidth = 128;\n        var simulationHeight = 128;\n        this.canvas = document.getElementById(id);\n        this.canvas.width = mapWidth;\n        this.canvas.height = mapHeight;\n        this.on_globalScale();\n        var gl = createGLContext(this.canvas);\n        this.gl = gl;\n        this.vbo = gl.createBuffer();\n        this.ibo = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 0, 2, 3]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(0);\n        this.splatProgram = new Program(this.gl, baseVertexShaderCode, splatShaderCode);\n        this.curlProgram = new Program(this.gl, baseVertexShaderCode, curlShaderCode);\n        this.vorticityProgram = new Program(this.gl, baseVertexShaderCode, vorticityShaderCode);\n        this.divergenceProgram = new Program(this.gl, baseVertexShaderCode, divergenceShaderCode);\n        this.advectionProgram = new Program(this.gl, baseVertexShaderCode, advectionShaderCode);\n        this.displayProgram = new Program(this.gl, baseVertexShaderCode, displayShaderCode);\n        this.clearProgram = new Program(this.gl, baseVertexShaderCode, clearShaderCode);\n        this.pressureProgram = new Program(this.gl, baseVertexShaderCode, pressureShaderCode);\n        this.gradientSubtractProgram = new Program(this.gl, baseVertexShaderCode, gradientSubtractShaderCode);\n        this.solveProgram = new Program(this.gl, baseVertexShaderCode, solveShaderCode);\n        this.obstaclesProgram = new Program(this.gl, baseVertexShaderCode, obstaclesShaderCode);\n        this.dye = new DoubleFbo(gl, mapWidth, mapHeight, gl.RGBA32F, gl.RGBA, gl.FLOAT, gl.LINEAR);\n        this.velocity = new DoubleFbo(gl, simulationWidth, simulationHeight, gl.RGBA32F, gl.RGBA, gl.FLOAT, gl.LINEAR);\n        this.pressure = new DoubleFbo(gl, simulationWidth, simulationHeight, gl.RGBA32F, gl.RGBA, gl.FLOAT, gl.NEAREST);\n        this.divergence = new Fbo(gl, simulationWidth, simulationHeight, gl.RGBA32F, gl.RGBA, gl.FLOAT, gl.NEAREST);\n        this.curl = new Fbo(gl, simulationWidth, simulationHeight, gl.RGBA32F, gl.RGBA, gl.FLOAT, gl.NEAREST);\n        this.obstacleC = new DoubleFbo(gl, simulationWidth, simulationHeight, gl.R8, gl.RED, gl.UNSIGNED_BYTE, gl.NEAREST);\n        this.obstacleN = new DoubleFbo(gl, simulationWidth, simulationHeight, gl.RGBA8, gl.RGBA, gl.UNSIGNED_BYTE, gl.NEAREST);\n        this.ditheringTexture = createTextureDefer(gl, \"LDR_LLL1_0.png\");\n        this.canvas.onmousedown = function (e) {\n            var dpr = window.devicePixelRatio;\n            _this.mousePushed = true;\n            var bb = _this.canvas.getBoundingClientRect();\n            _this.mouseX = ((e.clientX - bb.x) * (dpr / _this.globalScale)) | 0;\n            _this.mouseY = ((e.clientY - bb.y) * (dpr / _this.globalScale)) | 0;\n            _this.startX = _this.mouseX;\n            _this.startY = _this.mouseY;\n            _this.colorTime = Math.random();\n            hue(_this.color, _this.colorTime - Math.trunc(_this.colorTime));\n        };\n        this.canvas.onmouseup = function (e) {\n            _this.mousePushed = false;\n        };\n        this.canvas.onmousemove = function (e) {\n            var dpr = window.devicePixelRatio;\n            var bb = _this.canvas.getBoundingClientRect();\n            _this.mouseX = (e.clientX - bb.x) * (dpr / _this.globalScale) | 0;\n            _this.mouseY = (e.clientY - bb.y) * (dpr / _this.globalScale) | 0;\n        };\n    }\n    Fluid2dGpu.prototype.on_globalScale = function () {\n        var dpr = window.devicePixelRatio;\n        this.canvas.style.width = Math.round(this.canvas.width * this.globalScale / dpr) + \"px\";\n        this.canvas.style.height = Math.round(this.canvas.height * this.globalScale / dpr) + \"px\";\n    };\n    Fluid2dGpu.prototype.updateBrush = function (dt) {\n        this.colorTime += dt * this.colorSpeed;\n        hue(this.color, this.colorTime - (this.colorTime | 0));\n        var mx = this.mouseX | 0;\n        var my = this.mouseY | 0;\n        var width = this.canvas.width;\n        var height = this.canvas.height;\n        if (this.mousePushed && (mx !== this.startX || my !== this.startY)) {\n            if (mx > 0 && mx < width - 1 && my > 0 && my < height - 1) {\n                var fx = mx - this.startX;\n                var fy = my - this.startY;\n                var len = Math.sqrt(fx * fx + fy * fy);\n                //const n = (len | 0) + 1;\n                var n = 1;\n                var x = this.startX;\n                var y = this.startY;\n                var dx = (mx - this.startX) / n;\n                var dy = (my - this.startY) / n;\n                for (var i = 0; i < n + 1; ++i) {\n                    //if (this.fluid.blocked[ij] !== 0) continue;\n                    // this.fluid.addSourceDensity(this.spawnAmount / n, x | 0, y | 0);\n                    // this.fluid.addSourceVelocity(this.spawnForce / n, fx, fy, x | 0, y | 0);\n                    this.splat(x / width, 1.0 - y / height, fx, -fy, this.color);\n                    x += dx;\n                    y += dy;\n                }\n                this.startX = mx;\n                this.startY = my;\n            }\n        }\n    };\n    Fluid2dGpu.prototype.project = function () {\n        var gl = this.gl;\n        this.divergenceProgram.bind();\n        gl.uniform2f(this.divergenceProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.divergenceProgram.uniforms.uVelocity, this.velocity.read.attach(0));\n        gl.uniform1i(this.divergenceProgram.uniforms.uObstacleC, this.obstacleC.read.attach(1));\n        gl.uniform1i(this.divergenceProgram.uniforms.uObstacleN, this.obstacleN.read.attach(2));\n        this.blit(this.divergence);\n        this.clearProgram.bind();\n        gl.uniform1i(this.clearProgram.uniforms.uTexture, this.pressure.read.attach(0));\n        gl.uniform1f(this.clearProgram.uniforms.value, this.config.pressure);\n        this.blit(this.pressure.write);\n        this.pressure.swap();\n        this.pressureProgram.bind();\n        gl.uniform2f(this.pressureProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.pressureProgram.uniforms.uDivergence, this.divergence.attach(0));\n        gl.uniform1i(this.pressureProgram.uniforms.uObstacleC, this.obstacleC.read.attach(2));\n        gl.uniform1i(this.pressureProgram.uniforms.uObstacleN, this.obstacleN.read.attach(3));\n        for (var i = 0; i < this.config.pressureIterations; ++i) {\n            gl.uniform1i(this.pressureProgram.uniforms.uPressure, this.pressure.read.attach(1));\n            this.blit(this.pressure.write);\n            this.pressure.swap();\n        }\n        this.gradientSubtractProgram.bind();\n        gl.uniform2f(this.gradientSubtractProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.gradientSubtractProgram.uniforms.uPressure, this.pressure.read.attach(0));\n        gl.uniform1i(this.gradientSubtractProgram.uniforms.uVelocity, this.velocity.read.attach(1));\n        gl.uniform1i(this.gradientSubtractProgram.uniforms.uObstacleC, this.obstacleC.read.attach(2));\n        gl.uniform1i(this.gradientSubtractProgram.uniforms.uObstacleN, this.obstacleN.read.attach(3));\n        this.blit(this.velocity.write);\n        this.velocity.swap();\n    };\n    Fluid2dGpu.prototype.vorticity = function (dt) {\n        if (this.config.vorticity <= 0.0) {\n            return;\n        }\n        var gl = this.gl;\n        this.curlProgram.bind();\n        gl.uniform2f(this.curlProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.curlProgram.uniforms.uVelocity, this.velocity.read.attach(0));\n        this.blit(this.curl);\n        this.vorticityProgram.bind();\n        gl.uniform2f(this.vorticityProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.vorticityProgram.uniforms.uVelocity, this.velocity.read.attach(0));\n        gl.uniform1i(this.vorticityProgram.uniforms.uCurl, this.curl.attach(1));\n        gl.uniform1f(this.vorticityProgram.uniforms.curl, this.config.vorticity);\n        gl.uniform1f(this.vorticityProgram.uniforms.dt, dt);\n        this.blit(this.velocity.write);\n        this.velocity.swap();\n    };\n    Fluid2dGpu.prototype.diffuse = function (diff, dt, iterations, target) {\n        if (diff <= 0.0) {\n            return;\n        }\n        var gl = this.gl;\n        this.solveProgram.bind();\n        var a = dt * diff;\n        gl.uniform2f(this.solveProgram.uniforms.texelSize, target.texelSizeX, target.texelSizeY);\n        gl.uniform2f(this.solveProgram.uniforms.uC, a, 1.0 / (1.0 + 4.0 * a));\n        gl.uniform1i(this.solveProgram.uniforms.uObstacleC, this.obstacleC.read.attach(1));\n        gl.uniform1i(this.solveProgram.uniforms.uObstacleN, this.obstacleN.read.attach(2));\n        for (var i = 0; i < iterations; ++i) {\n            gl.uniform1i(this.solveProgram.uniforms.uSource, target.read.attach(0));\n            this.blit(target.write);\n            target.swap();\n        }\n    };\n    Fluid2dGpu.prototype.step = function (dt) {\n        var gl = this.gl;\n        gl.disable(gl.BLEND);\n        this.createObstacleN();\n        this.advectionProgram.bind();\n        gl.uniform2f(this.advectionProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        var velocityId = this.velocity.read.attach(0);\n        gl.uniform1i(this.advectionProgram.uniforms.uVelocity, velocityId);\n        gl.uniform1i(this.advectionProgram.uniforms.uSource, velocityId);\n        gl.uniform1i(this.advectionProgram.uniforms.uObstacleC, this.obstacleC.read.attach(2));\n        gl.uniform1f(this.advectionProgram.uniforms.dt, dt);\n        gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.dissipationVelocity);\n        this.blit(this.velocity.write);\n        this.velocity.swap();\n        this.advectionProgram.bind();\n        gl.uniform2f(this.advectionProgram.uniforms.texelSize, this.velocity.texelSizeX, this.velocity.texelSizeY);\n        gl.uniform1i(this.advectionProgram.uniforms.uVelocity, this.velocity.read.attach(0));\n        gl.uniform1i(this.advectionProgram.uniforms.uSource, this.dye.read.attach(1));\n        gl.uniform1i(this.advectionProgram.uniforms.uObstacleC, this.obstacleC.read.attach(2));\n        gl.uniform1f(this.advectionProgram.uniforms.dt, dt);\n        gl.uniform1f(this.advectionProgram.uniforms.dissipation, this.config.dissipationDensity);\n        this.blit(this.dye.write);\n        this.dye.swap();\n        this.diffuse(this.config.viscosity, dt, 20, this.velocity);\n        this.diffuse(this.config.diffusion, dt, 20, this.dye);\n        this.vorticity(dt);\n        this.project();\n    };\n    Fluid2dGpu.prototype.update = function (dt) {\n        dt *= this.timeScale;\n        if (dt > 0.0) {\n            this.updateBrush(dt);\n            if (this.N++ < 10) {\n                //this.splat(Math.random(), Math.random(), Math.random() * 100 - 50, Math.random() * 100 - 50, new Vec4(Math.random(), 0, Math.random(), 1));\n                var x = Math.random();\n                var y = Math.random();\n                for (var i = 0; i < 10; ++i) {\n                    this.splatObstacle(x + i * this.obstacleC.texelSizeX, y);\n                }\n            }\n            this.step(dt);\n        }\n        this.render(null);\n    };\n    Fluid2dGpu.prototype.render = function (target) {\n        var gl = this.gl;\n        var width = target === null ? gl.drawingBufferWidth : target.width;\n        var height = target === null ? gl.drawingBufferHeight : target.height;\n        this.displayProgram.bind();\n        gl.uniform2f(this.displayProgram.uniforms.texelSize, this.dye.texelSizeX, this.dye.texelSizeY);\n        gl.uniform1i(this.displayProgram.uniforms.uTexture, this.dye.read.attach(0));\n        //gl.uniform1i(displayMaterial.uniforms.uBloom, bloom.attach(1));\n        gl.uniform1f(this.displayProgram.uniforms.uShadingK, this.config.shading);\n        gl.uniform1i(this.displayProgram.uniforms.uDithering, this.ditheringTexture.attach(2));\n        gl.uniform1i(this.displayProgram.uniforms.uObstacleC, this.obstacleC.read.attach(3));\n        gl.uniform2f(this.displayProgram.uniforms.ditherScale, width / this.ditheringTexture.width, height / this.ditheringTexture.height);\n        this.blit(target);\n    };\n    Fluid2dGpu.prototype.splat = function (u, v, dx, dy, color) {\n        var gl = this.gl;\n        this.splatProgram.bind();\n        gl.uniform1i(this.splatProgram.uniforms.uTarget, this.velocity.read.attach(0));\n        gl.uniform1f(this.splatProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\n        gl.uniform2f(this.splatProgram.uniforms.point, u, v);\n        gl.uniform3f(this.splatProgram.uniforms.color, dx, dy, 0.0);\n        gl.uniform1f(this.splatProgram.uniforms.radius, 1 / this.canvas.width);\n        this.blit(this.velocity.write);\n        this.velocity.swap();\n        gl.uniform1i(this.splatProgram.uniforms.uTarget, this.dye.read.attach(0));\n        gl.uniform3f(this.splatProgram.uniforms.color, color.x, color.y, color.z);\n        this.blit(this.dye.write);\n        this.dye.swap();\n    };\n    Fluid2dGpu.prototype.splatObstacle = function (u, v) {\n        var gl = this.gl;\n        this.splatProgram.bind();\n        gl.uniform1i(this.splatProgram.uniforms.uTarget, this.obstacleC.read.attach(0));\n        gl.uniform1f(this.splatProgram.uniforms.aspectRatio, this.canvas.width / this.canvas.height);\n        gl.uniform2f(this.splatProgram.uniforms.point, u, v);\n        gl.uniform3f(this.splatProgram.uniforms.color, 1.0, 1.0, 1.0);\n        gl.uniform1f(this.splatProgram.uniforms.radius, 1.0 / this.canvas.width);\n        this.blit(this.obstacleC.write);\n        this.obstacleC.swap();\n    };\n    Fluid2dGpu.prototype.blit = function (target, clear) {\n        var gl = this.gl;\n        if (target == null) {\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        }\n        else {\n            gl.viewport(0, 0, target.width, target.height);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n        }\n        if (clear) {\n            gl.clearColor(0.0, 0.0, 0.0, 1.0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    };\n    // create cell-neighbor scale factors\n    Fluid2dGpu.prototype.createObstacleN = function () {\n        var gl = this.gl;\n        this.obstaclesProgram.bind();\n        gl.uniform2f(this.obstaclesProgram.uniforms.texelSize, this.obstacleC.texelSizeX, this.obstacleC.texelSizeY);\n        gl.uniform1i(this.obstaclesProgram.uniforms.uObstacles, this.obstacleC.read.attach(0));\n        this.blit(this.obstacleN.write);\n        this.obstacleN.swap();\n    };\n    return Fluid2dGpu;\n}());\nexport { Fluid2dGpu };\n//# sourceMappingURL=fluid2d-gpu.js.map","import { group, Property, range } from \"./props\";\nimport { Fluid2dGpu } from \"./fluid2d-gpu\";\n// const sim = new Simulation(\"view\");\n// document.body.appendChild(\n//     group(\"Sim\",\n//         range(new Property(sim, \"globalScale\", 1.0, 8.0, 1)),\n//         group(\"Velocity\",\n//             range(new Property(sim.fluid, \"vorticity\", 0.0, 50.0)),\n//             range(new Property(sim.fluid, \"viscosity\", 0.0, 0.01, 0.0001)),\n//         ),\n//         group(\"Diffusion\",\n//             range(new Property(sim.fluid, \"diffusionDensity\", 0.0, 0.001, 0.000001)),\n//             range(new Property(sim.fluid, \"diffusionColor\", 0.0, 0.001, 0.000001)),\n//         ),\n//         group(\"Damping\",\n//             range(new Property(sim.fluid, \"dampDensity\", 0.0, 10.0, 0.1)),\n//             range(new Property(sim.fluid, \"dampVelocity\", 0.0, 10.0, 0.1)),\n//         ),\n//         group(\"Gravity\",\n//             range(new Property(sim.fluid, \"gravityX\", -1000, 1000)),\n//             range(new Property(sim.fluid, \"gravityY\", -1000, 1000)),\n//         ),\n//         group(\"Wind\",\n//             range(new Property(sim.fluid, \"cVelocityX\", -100, 100)),\n//             range(new Property(sim.fluid, \"cVelocityY\", -100, 100)),\n//         ),\n//         combo(sim.fluid, \"advectType\", [\n//             \"Linear\",\n//             \"MM\",\n//             \"BFECC\"\n//         ]),\n//     ),\n// );\nvar glSim = new Fluid2dGpu(\"glview\");\ndocument.body.appendChild(group(\"Sim\", range(new Property(glSim, \"globalScale\", 1.0, 8.0, 1)), range(new Property(glSim, \"timeScale\", 0.0, 1.0, 0.1)), range(new Property(glSim.config, \"shading\", 0.0, 1.0, 0.1)), group(\"Velocity\", range(new Property(glSim.config, \"vorticity\", 0.0, 50.0)), range(new Property(glSim.config, \"viscosity\", 0.0, 10, 0.1))), group(\"Diffusion\", range(new Property(glSim.config, \"diffusion\", 0.0, 10, 0.1))), group(\"Pressure\", range(new Property(glSim.config, \"pressure\", 0.0, 1.0, 0.01)), range(new Property(glSim.config, \"pressureIterations\", 4, 50.0))), group(\"Dissipation\", range(new Property(glSim.config, \"dissipationDensity\", 0.0, 1.0, 0.01)), range(new Property(glSim.config, \"dissipationVelocity\", 0.0, 1.0, 0.01)))));\nvar update = function (dt) {\n    // sim.update(dt);\n    // sim.draw();\n    glSim.update(dt);\n};\nvar prevTime = 0;\nvar raf = function (ts) {\n    requestAnimationFrame(raf);\n    var dt = (ts - prevTime) / 1000.0;\n    update(dt);\n    prevTime = ts;\n};\nraf(0);\n//# sourceMappingURL=index.js.map"],"names":["this"],"mappings":"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"}